AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Deploys HNAP JSON harvester solution + GeoNetwork to geocore translation

Parameters:
  Environment:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /webpresence/environment
    Description: SSM parameter name for environment
  DeploymentBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /webpresence/deployment-bucket
    Description: S3 bucket where all deployment files are stored
  SvelteBucketString:
    Type: String
    Description: Unique string generated by the svelte app.geo.ca v2 deployment

Conditions:
  IsProd: !Equals [prod, !Ref Environment]
  IsStage: !Equals [stage, !Ref Environment]
  IsDev: !Equals [dev, !Ref Environment]

Resources:
  HnapJsonHarvesterAppGeoCav2:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      CodeUri:
        Bucket: !Ref DeploymentBucket
        Key: 
          Fn::If:
            - IsProd
            - cloudformation-templates/lambda/geocore-hnap-harvest/geocore-hnap-harvest-20241212-1100.zip
            - Fn::If:
              - IsStage
              - cloudformation-templates/lambda/geocore-hnap-harvest/geocore-hnap-harvest-20241212-1100.zip
              - cloudformation-templates/lambda/geocore-hnap-harvest/geocore-hnap-harvest-20241212-1100.zip
      MemorySize: 3009
      Handler: app.lambda_handler
      Timeout: 900
      Environment:
        Variables:
          BUCKET_NAME: !Sub 'app-geo-ca-pv-datalake-${SvelteBucketString}/hnap'
          GEOJSON_BUCKET_NAME: !Sub 'app-geo-ca-pv-datalake-${SvelteBucketString}/geojson'
          BASE_URL: 'https://maps.canada.ca'
          GN_JSON_RECORD_URL_START: 'https://maps.canada.ca/geonetwork/srv/api/0.1/records/'
          RUN_INTERVAL_MINUTES: 11
      Layers:
        - arn:aws:lambda:ca-central-1:336392948345:layer:AWSSDKPandas-Python39:8

  HnapJsonHarvesterRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub 'harvester-10mins-app-geo-ca-v2-${Environment}'
      Description: Harvester on a 10 minute interval
      State: DISABLED
      ScheduleExpression: 'rate(10 minutes)'
      Targets:
        - 
          Arn: 
            Fn::GetAtt: 
              - HnapJsonHarvesterAppGeoCav2
              - Arn
          Id: !Ref HnapJsonHarvesterAppGeoCav2

  PermissionForEventsToInvokeHarvesterLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref HnapJsonHarvesterAppGeoCav2
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt 
        - HnapJsonHarvesterRule
        - Arn

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: 'policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:*'
                Resource:
                  - !Sub arn:aws:s3:::app-geo-ca-pv-datalake-${SvelteBucketString}
                  - !Sub arn:aws:s3:::app-geo-ca-pv-datalake-${SvelteBucketString}/*

  LogGroup:
    Type: Custom::LogGroup
    Properties:
      ServiceToken: !ImportValue LogGroupHelperLambdaArn
      LogGroupName: !Sub '/${Environment}/webpresence/hnap_json_harvest_app-geo-ca-v2'
      RetentionInDays: 3653